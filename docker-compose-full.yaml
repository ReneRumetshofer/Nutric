services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgresuser
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_DB: nutric
    ports:
      - "5432:5432"
    volumes:
      - nutric_postgres_data:/var/lib/postgresql/data

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.1.4
    command:
      - start-dev
      - --import-realm
    ports:
      - 8080:8080
    volumes:
      - ./keycloak:/opt/keycloak/data/import/
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 8080
      KC_HOSTNAME_URL: http://localhost:8080
      KC_HOSTNAME_ADMIN_URL: http://localhost:8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: true
      KC_HTTP_RELATIVE_PATH: /
      KC_HTTP_ENABLED: true
      KC_METRICS_ENABLED: true
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      BACKEND_HOST: backend
      BACKEND_PORT: 8081
    depends_on:
      - backend

  backend:
    container_name: backend
    build:
      context: backend
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      POSTGRES_CONNECTION_STRING: jdbc:postgresql://postgres_db:5432/nutric
      POSTGRES_USER: postgresuser
      POSTGRES_PASSWORD: postgrespassword
      YAZIO_API_CLIENT_ID: ${YAZIO_API_CLIENT_ID}
      YAZIO_API_CLIENT_SECRET: ${YAZIO_API_CLIENT_SECRET}
      YAZIO_API_USER: ${YAZIO_API_USER}
      YAZIO_API_PASSWORD: ${YAZIO_API_PASSWORD}
    depends_on:
      - postgres
      - keycloak

volumes:
  nutric_postgres_data:
